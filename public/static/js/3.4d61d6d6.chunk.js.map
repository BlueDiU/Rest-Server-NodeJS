{"version":3,"sources":["components/menu/details/DetailsImg.jsx","hooks/useCart.js","components/modal/authModal/AuthModal.jsx","components/stardui/cart/ShoppingCartBtn.jsx","components/menu/details/DetailsInfo.jsx","components/menu/details/DetailsMain.jsx","pages/DetailsScreen.jsx","context/actions/product.action.js"],"names":["DetailsImg","img","name","src","alt","loading","className","useCart","setShowModal","dispatch","useDispatch","useState","loadingAction","setLoadingAction","product","setProduct","productExist","setProductExist","detailsData","useSelector","state","products","total","shoppingCart","uid","auth","useEffect","verifyProduct","a","_id","startIsProductAddedToCart","exist","onAction","startDeleteOneFromCart","countProducts","startAddToCart","userId","productId","quantity","AuthModal","showModal","toggleShow","show","setShow","tabIndex","onClick","e","stopPropagation","color","LOGO","AuthButtons","AuthLoginBtn","AuthSignInBtn","ShoppingCartBtn","size","disabled","rounded","outline","fas","icon","DetailsInfo","props","description","category","price","style","margin","formatPrice","format","map","s","value","DetailsMain","isLoading","pathname","useLocation","code","slice","startGetProductById","toString","Loader","BackButton","DetailsScreen","api","helpHttp","startGetInitialProducts","get","api_enpoint","getProducts","res","pagesNumber","Math","ceil","setIsLoading","err","setError","console","error","startGetProductsByPage","page","id","user","detailsItem","getLatestProduct","data","limit","type","TYPES","PRODUCT_GET","payload","PRODUCT_GET_DETAILS","startCurrentPage","current","CURRENT_PAGE"],"mappings":"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","file":"static/js/3.4d61d6d6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction DetailsImg({ img, name }) {\r\n  return (\r\n    <img\r\n      src={img}\r\n      alt={name}\r\n      loading=\"lazy\"\r\n      className=\"img-fluid shadow-2-strong rounded w-75\"\r\n    />\r\n  );\r\n}\r\n\r\nDetailsImg.propTypes = {\r\n  img: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default DetailsImg;\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n/* action */\r\nimport {\r\n  countProducts,\r\n  startAddToCart,\r\n  startDeleteOneFromCart,\r\n  startIsProductAddedToCart,\r\n} from '../context/actions/shoppingCart';\r\n\r\n/**\r\n *\r\n * @param {function}\r\n * @return {object}\r\n */\r\nexport const useCart = (setShowModal) => {\r\n  const dispatch = useDispatch();\r\n\r\n  /* Component states */\r\n  const [loadingAction, setLoadingAction] = useState(false);\r\n  const [product, setProduct] = useState(null);\r\n  const [productExist, setProductExist] = useState(false);\r\n\r\n  /* Redux: global states */\r\n  const { detailsData } = useSelector((state) => state.products);\r\n  const { total } = useSelector((state) => state.shoppingCart);\r\n  const { uid } = useSelector((state) => state.auth);\r\n\r\n  const handleAddToCart = () => {\r\n    if (uid) {\r\n      setLoadingAction(true);\r\n      dispatch(\r\n        startAddToCart({\r\n          userId: uid,\r\n          productId: detailsData._id,\r\n          quantity: 1,\r\n        })\r\n      );\r\n      dispatch(countProducts(total + 1));\r\n      // verifyProduct();\r\n\r\n      setProductExist(true);\r\n      setLoadingAction(false);\r\n    } else {\r\n      setShowModal(true);\r\n    }\r\n  };\r\n\r\n  const handleRemoveFromCart = () => {\r\n    if (uid) {\r\n      setLoadingAction(true);\r\n\r\n      startDeleteOneFromCart(detailsData._id, uid);\r\n\r\n      dispatch(countProducts(total - 1));\r\n      setProductExist(false);\r\n      setLoadingAction(false);\r\n    }\r\n  };\r\n\r\n  const onAction = () => {\r\n    if (!loadingAction) {\r\n      if (productExist) {\r\n        handleRemoveFromCart();\r\n      } else {\r\n        handleAddToCart();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setProduct(detailsData);\r\n  }, [detailsData]);\r\n\r\n  useEffect(() => {\r\n    verifyProduct();\r\n  }, [product]);\r\n\r\n  /* check if the product has been added to cart */\r\n  const verifyProduct = async () => {\r\n    if (product !== null && uid) {\r\n      const { _id } = product;\r\n\r\n      const { exist } = await startIsProductAddedToCart(\r\n        _id,\r\n        uid\r\n      );\r\n\r\n      setProductExist(exist);\r\n    }\r\n  };\r\n\r\n  return {\r\n    loadingAction,\r\n    productExist,\r\n    onAction,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport LOGO from '../../../assets/img/stardiuLogo.svg';\r\n\r\n/* Components */\r\nimport {\r\n  MDBModal,\r\n  MDBModalDialog,\r\n  MDBModalContent,\r\n  MDBModalHeader,\r\n  MDBModalTitle,\r\n  MDBModalBody,\r\n  MDBBtn,\r\n} from 'mdb-react-ui-kit';\r\nimport AuthButtons from '../../stardui/auth/AuthButtons';\r\nimport AuthLoginBtn from '../../stardui/auth/AuthLoginBtn';\r\nimport AuthSignInBtn from '../../stardui/auth/AuthSignInBtn';\r\n\r\n/* styles */\r\nimport './AuthModal.css';\r\n\r\nfunction AuthModal({ showModal, setShowModal, toggleShow }) {\r\n  return (\r\n    <MDBModal\r\n      show={showModal}\r\n      setShow={setShowModal}\r\n      tabIndex=\"-1\"\r\n      onClick={toggleShow}\r\n    >\r\n      <MDBModalDialog onClick={(e) => e.stopPropagation()}>\r\n        <MDBModalContent>\r\n          <MDBModalHeader>\r\n            <MDBModalTitle>Account</MDBModalTitle>\r\n            <MDBBtn\r\n              className=\"btn-close\"\r\n              color=\"none\"\r\n              onClick={toggleShow}\r\n            ></MDBBtn>\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <section className=\"auth-modal\">\r\n              <div className=\"auth-modal-info\">\r\n                <h5>Start now</h5>\r\n                <img\r\n                  src={LOGO}\r\n                  alt=\"stardui - logo\"\r\n                  className=\"auth-modal-img\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <AuthButtons>\r\n                  <div className=\"auth-modal-btn\">\r\n                    <AuthLoginBtn />\r\n                    <AuthSignInBtn />\r\n                  </div>\r\n                </AuthButtons>\r\n              </div>\r\n            </section>\r\n          </MDBModalBody>\r\n        </MDBModalContent>\r\n      </MDBModalDialog>\r\n    </MDBModal>\r\n  );\r\n}\r\n\r\nexport default AuthModal;\r\n","import React, { useState } from 'react';\r\nimport { useCart } from '../../../hooks/useCart';\r\n\r\n/* Components */\r\nimport { MDBBtn, MDBIcon } from 'mdb-react-ui-kit';\r\nimport AuthModal from '../../modal/authModal/AuthModal';\r\n\r\nfunction ShoppingCartBtn() {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const toggleShow = () => setShowModal(!showModal);\r\n\r\n  const { loadingAction, productExist, onAction } =\r\n    useCart(setShowModal);\r\n\r\n  return (\r\n    <div>\r\n      <AuthModal\r\n        showModal={showModal}\r\n        setShowModal={setShowModal}\r\n        toggleShow={toggleShow}\r\n      />\r\n\r\n      <MDBBtn\r\n        size=\"sm\"\r\n        disabled={loadingAction}\r\n        rounded\r\n        outline\r\n        color={productExist ? 'danger' : 'dark'}\r\n        onClick={onAction}\r\n      >\r\n        <div>\r\n          <MDBIcon\r\n            fas\r\n            icon={productExist ? 'minus' : 'cart-plus'}\r\n            className=\"me-2\"\r\n          />\r\n          {productExist\r\n            ? 'Remover del carrito'\r\n            : 'Añadir al carrito'}\r\n        </div>\r\n      </MDBBtn>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShoppingCartBtn;\r\n","import React from 'react';\r\nimport { formatPrice } from '../../../helpers/format-price';\r\n\r\n/* Components */\r\nimport { MDBBadge } from 'mdb-react-ui-kit';\r\nimport ShoppingCartBtn from '../../stardui/cart/ShoppingCartBtn';\r\n\r\nfunction DetailsInfo(props) {\r\n  const { name, description, category, price, size } = props;\r\n\r\n  return (\r\n    <section className=\"mt-5\">\r\n      <div className=\"d-flex align-items-center\">\r\n        <h3 style={{ margin: '0' }}>{name}</h3>\r\n        <MDBBadge className=\"mx-2\" color=\"dark\">\r\n          {category?.name}\r\n        </MDBBadge>\r\n      </div>\r\n      <div className=\"mt-4\">\r\n        <p className=\"max-size-text\">{description}</p>\r\n\r\n        <h5>Price:</h5>\r\n        <p className=\"fw-bold fs-4\">\r\n          {formatPrice.format(price)}\r\n        </p>\r\n\r\n        <div>\r\n          <small>Tamaño</small>\r\n\r\n          <select className=\"form-select\">\r\n            {size?.map((s) => (\r\n              <option key={s} value=\"1\">\r\n                {s}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <hr />\r\n        <ShoppingCartBtn />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default DetailsInfo;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router';\r\nimport { startGetProductById } from '../../../context/actions/product.action';\r\n\r\n/* Components */\r\nimport { MDBContainer, MDBRow } from 'mdb-react-ui-kit';\r\nimport BackButton from '../../utils/BackButton';\r\nimport Loader from '../../utils/loader/Loader';\r\nimport DetailsImg from './DetailsImg';\r\nimport DetailsInfo from './DetailsInfo';\r\n\r\n/* styles */\r\nimport './Details.css';\r\n\r\nfunction DetailsMain() {\r\n  const dispatch = useDispatch();\r\n\r\n  const { detailsData: product, isLoading } = useSelector(\r\n    (state) => state.products\r\n  );\r\n\r\n  let { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    const code = pathname.slice(3);\r\n\r\n    dispatch(startGetProductById(code.toString()));\r\n  }, [pathname]);\r\n\r\n  return (\r\n    <>\r\n      <MDBContainer className=\"mt-5 mb-5\">\r\n        <div className=\"pad-abs-btn\"></div>\r\n        <MDBRow>\r\n          {isLoading ? (\r\n            <Loader />\r\n          ) : (\r\n            <>\r\n              <article className=\"col-lg-6 d-flex justify-content-center\">\r\n                <DetailsImg img={product?.img} />\r\n              </article>\r\n\r\n              <article className=\"col-lg-6\">\r\n                <DetailsInfo {...product} />\r\n                <div className=\"back-btn-position\">\r\n                  <BackButton />\r\n                </div>\r\n              </article>\r\n            </>\r\n          )}\r\n        </MDBRow>\r\n      </MDBContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DetailsMain;\r\n","import React from 'react';\r\n\r\n/* Components */\r\nimport DetailsMain from '../components/menu/details/DetailsMain';\r\nimport { Footer, Navbar } from '../components/stardui';\r\n\r\nfunction DetailsScreen() {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <DetailsMain />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DetailsScreen;\r\n","import { api_enpoint } from '../../helpers/helpApi';\r\nimport { helpHttp } from '../../helpers/helpHttp';\r\nimport { TYPES } from '../types/types';\r\nimport { setError, setIsLoading } from './shared.action';\r\n\r\n// instance for http helper\r\nconst api = helpHttp();\r\n\r\n/* ----- PRODUCTS SECTION ----- */\r\n\r\n/* ----- GET SECTION ----- */\r\n\r\nconst limit = 8;\r\n\r\n/* get initial products when the component(CardGrid) load the first time */\r\nexport const startGetInitialProducts = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await api.get(\r\n        `${api_enpoint.getProducts}/?page=1&limit=${limit}`\r\n      );\r\n\r\n      // calculate total of pages from database\r\n      let pagesNumber = Math.ceil(res.total / limit);\r\n\r\n      dispatch(setIsLoading(false));\r\n\r\n      if (!res.err) {\r\n        dispatch(\r\n          getProducts(\r\n            res.products,\r\n            res.total,\r\n            limit,\r\n            pagesNumber\r\n          )\r\n        );\r\n      } else {\r\n        dispatch(setError(res));\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * get products by page\r\n * @param {number} page\r\n */\r\nexport const startGetProductsByPage = (page = 1) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await api.get(\r\n        `${api_enpoint.getProducts}/?page=${page}&limit=${limit}`\r\n      );\r\n\r\n      let pagesNumber = Math.ceil(res.total / limit);\r\n\r\n      dispatch(setIsLoading(false));\r\n      if (!res.err) {\r\n        dispatch(\r\n          getProducts(\r\n            res.products,\r\n            res.total,\r\n            limit,\r\n            pagesNumber\r\n          )\r\n        );\r\n      } else {\r\n        dispatch(setError(res));\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n *\r\n * @param {string} id product id\r\n */\r\nexport const startGetProductById = (id) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await api.get(\r\n        `${api_enpoint.getProducts}/${id}`\r\n      );\r\n\r\n      dispatch(setIsLoading(false));\r\n\r\n      if (!res.err) {\r\n        // delete user object\r\n        delete res.user;\r\n\r\n        dispatch(detailsItem(res));\r\n      } else {\r\n        dispatch(setError(res));\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getLatestProduct = async () => {\r\n  try {\r\n    const res = await api.get(\r\n      `${api_enpoint.getProducts}/latest`\r\n    );\r\n\r\n    return res;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n/**\r\n *\r\n * @param {Array<object>} data:object\r\n * @param {number} total\r\n * @param {number} limit\r\n */\r\nconst getProducts = (\r\n  data,\r\n  total = 0,\r\n  limit = 0,\r\n  pagesNumber = 0\r\n) => ({\r\n  type: TYPES.PRODUCT_GET,\r\n  payload: { data, total, limit, pagesNumber },\r\n});\r\n\r\n/**\r\n *\r\n * @param {object} data\r\n */\r\nconst detailsItem = (data) => ({\r\n  type: TYPES.PRODUCT_GET_DETAILS,\r\n  payload: data,\r\n});\r\n\r\n/**\r\n * Set the current page products\r\n * @param {number} current\r\n */\r\nexport const startCurrentPage = (current) => ({\r\n  type: TYPES.CURRENT_PAGE,\r\n  payload: current,\r\n});\r\n"],"sourceRoot":""}