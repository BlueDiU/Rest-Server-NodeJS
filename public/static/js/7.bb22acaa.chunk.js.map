{"version":3,"sources":["components/auth/AuthContainer.jsx","components/auth/AuthErrorMessage.jsx","components/auth/googleButton/GoogleButton.jsx","components/auth/AuthLoginScreen.jsx","components/auth/AuthLogo.jsx","components/auth/AuthSignInScreen.jsx","routes/AuthRouter.jsx"],"names":["AuthContainer","children","className","style","height","AuthErrorMessage","msg","color","GoogleButton","AuthLoginScreen","dispatch","useDispatch","useForm","register","handleSubmit","errors","formState","useEffect","document","title","onSubmit","email","password","startLoginWithEmailPassword","top","htmlFor","type","id","defaultValue","required","maxLength","pattern","minLength","rounded","to","ROUTE","SIGN_IN","AuthLogo","light","bgColor","src","IMG_LOGO","alt","loading","AuthSignInScreen","name","startRegisterWithEmailPasswordName","LOGIN","AuthRouter","exact","path","component"],"mappings":"4LAceA,MAXf,YAAsC,IAAbC,EAAY,EAAZA,SACvB,OACE,sBACEC,UAAU,mEACVC,MAAO,CAAEC,OAAQ,SAFnB,SAIE,yBAASF,UAAU,YAAnB,SAAgCD,O,+CCMvBI,MAZf,YAAoC,IAARC,EAAO,EAAPA,IAC1B,OACE,qBAAKJ,UAAU,YAAYC,MAAO,CAAEI,MAAO,WAA3C,SACGD,K,MCsBQE,I,sBCiGAC,MA1Gf,WACE,IAAMC,EAAWC,cADQ,EAOrBC,cAHFC,EAJuB,EAIvBA,SACAC,EALuB,EAKvBA,aACaC,EANU,EAMvBC,UAAaD,OAkBf,OAJAE,qBAAU,WACRC,SAASC,MAAQ,oBAChB,IAGD,8BACE,uBACEC,SAAUN,GAlBC,SAAC,GAAyB,IAAvBO,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzBZ,EAASa,YAA4BF,EAAOC,OAkBxCpB,UAAU,qBAFZ,UAIE,eAAC,IAAD,CAAOsB,KAAG,EAAV,UACE,oBAAItB,UAAU,YAAd,oBAiBA,0BAASA,UAAU,eAAnB,UACE,uBAAOuB,QAAQ,QAAQvB,UAAU,aAAjC,2BAGA,mCACEwB,KAAK,QACLC,GAAG,QACHC,aAAa,GACb1B,UAAU,uBACNW,EAAS,QAAS,CACpBgB,UAAU,EACVC,UAAW,GACXC,QAAS,0CAGZhB,EAAOM,OACN,cAAC,EAAD,CAAkBf,IAAI,8BAI1B,0BAASJ,UAAU,eAAnB,UACE,uBACEuB,QAAQ,WACRvB,UAAU,kBAFZ,sBAOA,mCACEwB,KAAK,WACLC,GAAG,WACHC,aAAa,GACb1B,UAAU,uBACNW,EAAS,WAAY,CACvBgB,UAAU,EACVG,UAAW,EACXF,UAAW,OAIdf,EAAOO,UACN,cAAC,EAAD,CAAkBhB,IAAI,yEAI1B,cAAC,IAAD,CAAQ2B,SAAO,EAAC/B,UAAU,OAAOK,MAAM,OAAvC,uBAKF,cAAC,IAAD,CAAM2B,GAAIC,IAAMC,QAASlC,UAAU,eAAnC,qC,QC7FOmC,MApBf,WACE,OACE,8BACE,cAAC,IAAD,CAAWC,OAAK,EAACC,QAAQ,QAAzB,SACE,cAAC,IAAD,UACE,sBAAKrC,UAAU,MAAf,UACE,qBACEsC,IAAKC,IACLrC,OAAO,KACPsC,IAAI,GACJC,QAAQ,SAEV,sBAAMzC,UAAU,OAAhB,+BCkGG0C,MAvGf,WACE,IAAMlC,EAAWC,cADS,EAOtBC,cAHFC,EAJwB,EAIxBA,SACAC,EALwB,EAKxBA,aACaC,EANW,EAMxBC,UAAaD,OAaf,OAJAE,qBAAU,WACRC,SAASC,MAAQ,sBAChB,IAGD,uBACEjB,UAAU,qBACVkB,SAAUN,GAbG,SAAC,GAA+B,IAA7B+B,EAA4B,EAA5BA,KAAMxB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/BZ,EACEoC,YAAmCD,EAAMxB,EAAOC,OASlD,UAIE,eAAC,IAAD,CAAOE,KAAG,EAAV,UACE,yCAEA,0BAAStB,UAAU,eAAnB,UACE,uBAAOuB,QAAQ,OAAOvB,UAAU,kBAAhC,kBAIA,mCACEwB,KAAK,OACLC,GAAG,OACHC,aAAa,GACb1B,UAAU,uBACNW,EAAS,OAAQ,CACnBgB,UAAU,EACVC,UAAW,GACXC,QAAS,4EAIZhB,EAAO8B,MACN,cAAC,EAAD,CAAkBvC,IAAI,6BAI1B,0BAASJ,UAAU,eAAnB,UACE,uBAAOuB,QAAQ,QAAQvB,UAAU,aAAjC,2BAGA,mCACEwB,KAAK,QACLC,GAAG,QACHC,aAAa,GACb1B,UAAU,uBACNW,EAAS,QAAS,CACpBgB,UAAU,EACVC,UAAW,GACXC,QAAS,0CAGZhB,EAAOM,OACN,cAAC,EAAD,CAAkBf,IAAI,8BAI1B,0BAASJ,UAAU,eAAnB,UACE,uBAAOuB,QAAQ,WAAWvB,UAAU,kBAApC,sBAIA,mCACEwB,KAAK,WACLC,GAAG,WACHC,aAAa,GACb1B,UAAU,uBACNW,EAAS,WAAY,CACvBgB,UAAU,EACVG,UAAW,EACXF,UAAW,OAIdf,EAAOO,UACN,cAAC,EAAD,CAAkBhB,IAAI,yEAI1B,cAAC,IAAD,CAAQ2B,SAAO,EAAC/B,UAAU,OAAOK,MAAM,OAAvC,uBAKF,cAAC,IAAD,CAAM2B,GAAIC,IAAMY,MAAO7C,UAAU,eAAjC,mCCnES8C,UA5Bf,WACE,OACE,qCACE,iCACE,cAAC,EAAD,MAEF,cAAC,EAAD,UACE,kCACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,OAAK,EACLC,KAAMf,IAAMY,MACZI,UAAW1C,IAEb,cAAC,IAAD,CACEwC,OAAK,EACLC,KAAMf,IAAMC,QACZe,UAAWP,IAGb,cAAC,IAAD,CAAUV,GAAIC,IAAMY","file":"static/js/7.bb22acaa.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Auth.css';\r\n\r\nfunction AuthContainer({ children }) {\r\n  return (\r\n    <main\r\n      className=\"d-flex justify-content-center align-items-center auth-screen-bgc\"\r\n      style={{ height: '100vh' }}\r\n    >\r\n      <section className=\"container\">{children}</section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default AuthContainer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AuthErrorMessage({ msg }) {\r\n  return (\r\n    <div className=\"form-text\" style={{ color: '#E74C3C' }}>\r\n      {msg}\r\n    </div>\r\n  );\r\n}\r\n\r\nAuthErrorMessage.propTypes = {\r\n  msg: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default AuthErrorMessage;\r\n","import React from 'react';\r\nimport { MDBIcon } from 'mdb-react-ui-kit';\r\nimport './GoogleButton.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction GoogleButton({ onClick, disabled }) {\r\n  return (\r\n    <div\r\n      className=\"social-media\"\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n    >\r\n      <div className=\"social-icon\">\r\n        <MDBIcon fab icon=\"google\" />\r\n      </div>\r\n\r\n      <div className=\"social-text\">\r\n        <span>Sign in with google</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nGoogleButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default GoogleButton;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MDBBtn } from 'mdb-react-ui-kit';\r\nimport { useForm } from 'react-hook-form';\r\nimport { ROUTE } from '../../constants/auth-routes';\r\n\r\nimport Slide from 'react-reveal/Slide';\r\n\r\nimport AuthErrorMessage from './AuthErrorMessage';\r\nimport GoogleButton from './googleButton/GoogleButton';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  startLoginWithEmailPassword,\r\n  startLoginWithGoogle,\r\n} from '../../context/actions/auth.action';\r\n\r\n/* GOOGLE AUTH */\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nfunction AuthLoginScreen() {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = ({ email, password }) => {\r\n    dispatch(startLoginWithEmailPassword(email, password));\r\n  };\r\n\r\n  const responseGoogle = (resp) => {\r\n    const { tokenId } = resp;\r\n\r\n    console.log('google', tokenId);\r\n    dispatch(startLoginWithGoogle(tokenId));\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = 'Stardui - Login';\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={handleSubmit(onSubmit)}\r\n        className=\"form-container p-4\"\r\n      >\r\n        <Slide top>\r\n          <h3 className=\"mt-3 mb-4\">Log In</h3>\r\n\r\n          {/* TODO: REPARAR GOOGLE SIGN IN PRODUCCION */}\r\n          {/*  <GoogleLogin\r\n            // eslint-disable-next-line no-undef\r\n            clientId={process.env.REACT_APP_CLIENT_ID}\r\n            render={(renderProps) => (\r\n              <GoogleButton\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n              />\r\n            )}\r\n            onSuccess={responseGoogle}\r\n            onFailure={responseGoogle}\r\n            cookiePolicy={'single_host_origin'}\r\n          /> */}\r\n\r\n          <section className=\"form-outline\">\r\n            <label htmlFor=\"email\" className=\"form-label\">\r\n              Email Address\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              defaultValue=\"\"\r\n              className=\"form-control border\"\r\n              {...register('email', {\r\n                required: true,\r\n                maxLength: 20,\r\n                pattern: /^(\\w+[/./-]?){1,}@[a-z]+[/.]\\w{2,}$/,\r\n              })}\r\n            />\r\n            {errors.email && (\r\n              <AuthErrorMessage msg=\"The email is not valid\" />\r\n            )}\r\n          </section>\r\n\r\n          <section className=\"form-outline\">\r\n            <label\r\n              htmlFor=\"password\"\r\n              className=\"form-label mt-1\"\r\n            >\r\n              Password\r\n            </label>\r\n\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              defaultValue=\"\"\r\n              className=\"form-control border\"\r\n              {...register('password', {\r\n                required: true,\r\n                minLength: 6,\r\n                maxLength: 22,\r\n              })}\r\n            />\r\n\r\n            {errors.password && (\r\n              <AuthErrorMessage msg=\"The password is not valid, must at least 6 letter or less that 22\" />\r\n            )}\r\n          </section>\r\n\r\n          <MDBBtn rounded className=\"mt-4\" color=\"dark\">\r\n            Log In\r\n          </MDBBtn>\r\n        </Slide>\r\n\r\n        <Link to={ROUTE.SIGN_IN} className=\"d-block mt-3\">\r\n          Create an account\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthLoginScreen;\r\n","import React from 'react';\r\nimport { MDBContainer, MDBNavbar } from 'mdb-react-ui-kit';\r\nimport IMG_LOGO from '../../assets/img/stardiuLogo.svg';\r\n\r\nfunction AuthLogo() {\r\n  return (\r\n    <div>\r\n      <MDBNavbar light bgColor=\"light\">\r\n        <MDBContainer>\r\n          <div className=\"p-2\">\r\n            <img\r\n              src={IMG_LOGO}\r\n              height=\"30\"\r\n              alt=\"\"\r\n              loading=\"lazy\"\r\n            />\r\n            <span className=\"ms-3\">Stardiu</span>\r\n          </div>\r\n        </MDBContainer>\r\n      </MDBNavbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthLogo;\r\n","import React, { useEffect } from 'react';\r\nimport { MDBBtn } from 'mdb-react-ui-kit';\r\nimport { ROUTE } from '../../constants/auth-routes';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport Slide from 'react-reveal/Slide';\r\nimport AuthErrorMessage from './AuthErrorMessage';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startRegisterWithEmailPasswordName } from '../../context/actions/auth.action';\r\n\r\nfunction AuthSignInScreen() {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = ({ name, email, password }) => {\r\n    dispatch(\r\n      startRegisterWithEmailPasswordName(name, email, password)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = 'Stardui - Sing In';\r\n  }, []);\r\n\r\n  return (\r\n    <form\r\n      className=\"form-container p-4\"\r\n      onSubmit={handleSubmit(onSubmit)}\r\n    >\r\n      <Slide top>\r\n        <h2>Sign In</h2>\r\n\r\n        <section className=\"form-outline\">\r\n          <label htmlFor=\"name\" className=\"form-label mt-1\">\r\n            Name\r\n          </label>\r\n\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            defaultValue=\"\"\r\n            className=\"form-control border\"\r\n            {...register('name', {\r\n              required: true,\r\n              maxLength: 22,\r\n              pattern: /^[A-Za-zÑñÁáÉéÍíÓóÚúÜü\\s]+$/,\r\n            })}\r\n          />\r\n\r\n          {errors.name && (\r\n            <AuthErrorMessage msg=\"the name is not valid\" />\r\n          )}\r\n        </section>\r\n\r\n        <section className=\"form-outline\">\r\n          <label htmlFor=\"email\" className=\"form-label\">\r\n            Email Address\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            defaultValue=\"\"\r\n            className=\"form-control border\"\r\n            {...register('email', {\r\n              required: true,\r\n              maxLength: 20,\r\n              pattern: /^(\\w+[/./-]?){1,}@[a-z]+[/.]\\w{2,}$/,\r\n            })}\r\n          />\r\n          {errors.email && (\r\n            <AuthErrorMessage msg=\"The email is not valid\" />\r\n          )}\r\n        </section>\r\n\r\n        <section className=\"form-outline\">\r\n          <label htmlFor=\"password\" className=\"form-label mt-1\">\r\n            Password\r\n          </label>\r\n\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            defaultValue=\"\"\r\n            className=\"form-control border\"\r\n            {...register('password', {\r\n              required: true,\r\n              minLength: 6,\r\n              maxLength: 22,\r\n            })}\r\n          />\r\n\r\n          {errors.password && (\r\n            <AuthErrorMessage msg=\"The password is not valid, must at least 6 letter or less that 22\" />\r\n          )}\r\n        </section>\r\n\r\n        <MDBBtn rounded className=\"mt-4\" color=\"dark\">\r\n          Log In\r\n        </MDBBtn>\r\n      </Slide>\r\n\r\n      <Link to={ROUTE.LOGIN} className=\"d-block mt-3\">\r\n        I have an account\r\n      </Link>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AuthSignInScreen;\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport { ROUTE } from '../constants/auth-routes';\r\n\r\n/* components */\r\nimport {\r\n  AuthContainer,\r\n  AuthLoginScreen,\r\n  AuthLogo,\r\n  AuthSignInScreen,\r\n} from '../components/auth';\r\n\r\nfunction AuthRouter() {\r\n  return (\r\n    <>\r\n      <header>\r\n        <AuthLogo />\r\n      </header>\r\n      <AuthContainer>\r\n        <article>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path={ROUTE.LOGIN}\r\n              component={AuthLoginScreen}\r\n            />\r\n            <Route\r\n              exact\r\n              path={ROUTE.SIGN_IN}\r\n              component={AuthSignInScreen}\r\n            />\r\n\r\n            <Redirect to={ROUTE.LOGIN} />\r\n          </Switch>\r\n        </article>\r\n      </AuthContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AuthRouter;\r\n"],"sourceRoot":""}